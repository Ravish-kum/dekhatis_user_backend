# Generated by Django 4.1.7 on 2023-06-21 06:05

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adver_image', models.ImageField(upload_to='uploads/adver_images')),
                ('adver_url', models.CharField(max_length=100, unique=True)),
                ('paid_adver_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'advertisement_table',
            },
        ),
        migrations.CreateModel(
            name='Customer_table',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('customer_name', models.CharField(max_length=45)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_otp', models.CharField(blank=True, max_length=20)),
                ('customer_state', models.CharField(blank=True, max_length=200)),
                ('customer_address', models.CharField(blank=True, max_length=300)),
                ('customer_pin', models.IntegerField(default=0)),
                ('customer_phone', models.CharField(blank=True, max_length=14)),
                ('customer_cerdits_tokens', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'customer_table',
            },
        ),
        migrations.CreateModel(
            name='Dekhatis_Delivery_table',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('delivery_merchant_id', models.CharField(blank=True, max_length=200, null=True)),
                ('order_id', models.CharField(blank=True, max_length=200, null=True)),
                ('delivery_payment', models.IntegerField(blank=True, null=True)),
                ('product_pickup_location', models.CharField(blank=True, max_length=200, null=True)),
                ('product_dropoff_location', models.CharField(blank=True, max_length=200, null=True)),
                ('item_id', models.CharField(blank=True, max_length=200, null=True)),
                ('delivery_merchant_payment', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'dekhatis_delivery_table',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('item_id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('m_item_id', models.CharField(blank=True, max_length=30)),
                ('item_name', models.CharField(max_length=50)),
                ('item_image', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_categories', models.CharField(max_length=30)),
                ('item_detail', models.CharField(max_length=300)),
                ('item_cost', models.IntegerField()),
                ('item_revenue', models.IntegerField()),
                ('shop_pin', models.IntegerField()),
                ('item_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('item_size', models.CharField(blank=True, max_length=30)),
                ('item_finish', models.CharField(blank=True, max_length=30)),
                ('item_storage', models.CharField(blank=True, max_length=30)),
                ('item_colour', models.CharField(blank=True, max_length=30)),
                ('item_room', models.CharField(blank=True, max_length=20)),
                ('item_shipping_time', models.CharField(max_length=30)),
                ('item_visual_similarity', models.CharField(blank=True, max_length=30)),
                ('item_warrenty', models.CharField(blank=True, max_length=30)),
                ('item_instructions', models.CharField(blank=True, max_length=30)),
                ('item_rating', models.IntegerField(default=0)),
                ('item_discount_percentage', models.CharField(blank=True, max_length=100, null=True)),
                ('item_availability', models.CharField(blank=True, max_length=100, null=True)),
                ('item_delivery_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('item_recommended', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Query_table',
            fields=[
                ('placing_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('item_cost', models.IntegerField()),
                ('item_quantity', models.IntegerField(default=1)),
                ('delivery_state', models.CharField(blank=True, max_length=200)),
                ('delivery_address', models.CharField(blank=True, max_length=300)),
                ('delivery_pin', models.IntegerField(default=0)),
                ('delivery_phone', models.CharField(blank=True, max_length=14)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('order_status', models.CharField(max_length=100)),
                ('transaction_id', models.CharField(max_length=200)),
                ('bank_id', models.CharField(blank=True, max_length=200)),
                ('shipping_otp', models.IntegerField(blank=True, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=200, null=True)),
                ('dekhatis_payment_status', models.CharField(blank=True, max_length=200, null=True)),
                ('item_delivery_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('customer_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.customer_table', verbose_name='user')),
                ('item_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.product', verbose_name='item')),
            ],
            options={
                'db_table': 'query_table',
            },
        ),
        migrations.CreateModel(
            name='Shop_table',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('shop_image', models.ImageField(blank=True, upload_to='uploads/images')),
                ('shop_id', models.CharField(max_length=30, unique=True)),
                ('shop_name', models.CharField(max_length=45)),
                ('shop_brand_name', models.CharField(blank=True, max_length=45)),
                ('shop_email', models.EmailField(max_length=254)),
                ('shop_pass', models.CharField(blank=True, max_length=200)),
                ('shop_address', models.CharField(max_length=300)),
                ('shop_phone', models.CharField(max_length=14)),
                ('shop_alt', models.CharField(max_length=14)),
                ('shop_pin', models.IntegerField()),
                ('shop_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('manufacturer_name', models.CharField(max_length=45)),
                ('manufacturer_address', models.CharField(max_length=45)),
                ('manufacturer_phone', models.IntegerField(default=0)),
                ('shop_service_availability', models.CharField(blank=True, max_length=50)),
                ('item_total_number', models.IntegerField(blank=True, null=True)),
                ('woodservicing_register', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'shop_table',
            },
        ),
        migrations.CreateModel(
            name='ThemeFurniture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('theme_cost', models.CharField(max_length=100)),
                ('theme_date', models.DateField(auto_now_add=True)),
                ('theme_revenue', models.CharField(max_length=100)),
                ('theme_room', models.CharField(max_length=100)),
                ('theme_availability', models.CharField(max_length=100)),
                ('theme_discount_percentage', models.CharField(max_length=100)),
                ('theme_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('details', models.CharField(max_length=100)),
                ('theme_item_list', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'theme_table',
            },
        ),
        migrations.CreateModel(
            name='ThemeFurnituresBookings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.CharField(blank=True, max_length=100, null=True)),
                ('shop_id', models.CharField(blank=True, max_length=100, null=True)),
                ('placing_id', models.TextField(blank=True, max_length=100, null=True)),
                ('theme_id', models.CharField(max_length=100)),
                ('theme_order_status', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'theme_booking_table',
            },
        ),
        migrations.CreateModel(
            name='Wood_Servicing_table',
            fields=[
                ('servicing_placing_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('shop_pin', models.IntegerField()),
                ('service_state', models.CharField(blank=True, max_length=200)),
                ('service_address', models.CharField(blank=True, max_length=300)),
                ('service_pin', models.IntegerField(default=0)),
                ('service_phone', models.CharField(blank=True, max_length=14)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('service_status', models.CharField(max_length=100)),
                ('transaction_id', models.CharField(max_length=200)),
                ('bank_id', models.CharField(blank=True, max_length=200)),
                ('service_date', models.DateTimeField(blank=True, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=200, null=True)),
                ('dekhatis_payment_status', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.customer_table', verbose_name='user')),
                ('shop_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.shop_table', verbose_name='shop')),
            ],
            options={
                'db_table': 'wood_servicing_table',
            },
        ),
        migrations.CreateModel(
            name='Review_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.CharField(max_length=400)),
                ('events', models.ImageField(blank=True, upload_to='uploads/reviews_images')),
                ('customer_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.query_table', verbose_name='customer')),
                ('item_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.product', verbose_name='reviews')),
            ],
            options={
                'db_table': 'review_table',
            },
        ),
        migrations.AddField(
            model_name='query_table',
            name='shop_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.shop_table', verbose_name='shop'),
        ),
        migrations.AddField(
            model_name='product',
            name='shop_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='backend.shop_table', verbose_name='placer'),
        ),
        migrations.CreateModel(
            name='Images_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_pic1', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic2', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic3', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic4', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic5', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic6', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic7', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic8', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic9', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_pic10', models.ImageField(blank=True, upload_to='uploads/images')),
                ('item_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.product', verbose_name='item')),
            ],
            options={
                'db_table': 'images_table',
            },
        ),
        migrations.CreateModel(
            name='Cancellations_table',
            fields=[
                ('cancellation_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cancellations_date', models.DateTimeField(auto_now_add=True)),
                ('order_date', models.CharField(max_length=50)),
                ('order_status', models.CharField(max_length=100)),
                ('transaction_id', models.CharField(max_length=200)),
                ('bank_id', models.CharField(max_length=200)),
                ('customer_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.customer_table', verbose_name='customer')),
                ('item_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.product', verbose_name='item')),
                ('placing_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.query_table', verbose_name='customer')),
                ('shop_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='backend.shop_table', verbose_name='shop')),
            ],
            options={
                'db_table': 'cancellations_table',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=12, unique=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('otp', models.CharField(max_length=6)),
                ('username', models.CharField(max_length=150)),
                ('terms_conditions', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
